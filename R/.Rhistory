library(devtools)
use_r("tmb")
load_all()
check()
form4 <- y ~ dnorm(mean = b0 + b1 * latitude^2, sd = sd)
b0=1
b1=2
set.seed(101)
dd <- data.frame(
y = rpois(100, lambda = 2),
latitude = rnorm(100)
)
sd =1
mkfun <- function(formula, data) {
if(missing(data)) {
stop(paste("missing data...")) # if no data
}
RHS <- formula[[3]] # dpois(lambda = (b0 * latitude^2))
response <- formula[[2]] #y
ddistn <- as.character(RHS[[1]]) ## dpois /// get the name of distribution variable
arglist <- as.list(RHS[-1]) ## $lambda = (b0 * latitude^2) ///delete function name
arglist1 <- c(
list(x = response),
arglist, ##
list(log = TRUE)
)
fn <- function(pars) { ## parameter
pars_and_data <- c(as.list(pars), data)
r <- with(
pars_and_data,
-sum(do.call(ddistn, arglist1))
)
return(r)
}
gr <- function(pars) {
pars_and_data <- c(as.list(pars), data)
if (!ddistn %in% names(loglik_list)) {
stop("I can't evaluate the derivative for ", sQuote(ddistn))
}
## eventually we need to calculate partial derivatives of the log-likelihood
## with respect to all of its parameters
LL <- loglik_list[[ddistn]]$expr
mnames <- loglik_list[[ddistn]]$params
## ???
## setdiff(all.vars(LL), "x")  ## response var should be the only non-parameter
d0 <- Deriv::Deriv(LL, mnames)
## evaluate all of the arguments to the log-likelihood
arglist_eval <- lapply(arglist, eval, pars_and_data) ##lambda
## evaluate response variable and assign its value to 'x'
arglist_eval$x <- eval(response, pars_and_data) #x = y
## derivative of log-lik wrt PDF parameters
d1 <- eval(d0, arglist_eval) ## sub back to d0
## compute the deriv of log_lik with respect to its parameters
parnames <- setdiff(all.vars(RHS), names(data))
dlist <- list()
glist <- list()
for (p in parnames) {
dlist[[p]] <- eval(Deriv::Deriv(arglist$lambda, p), pars_and_data)
glist[[p]] <- -sum(d1 * dlist[[p]])
}
return(unlist(glist))
## d(loglik_pois/d(lambda))* d(lambda)/d(b0)
}
return(list(fn = fn, gr = gr))
}
formula <- y ~ dnorm(mean = b0 + b1 * latitude^2, sd = sd)
RHS <- formula[[3]] # dpois(lambda = (b0 * latitude^2))
RHS
formula <- y ~ dnorm(mean = b0 + b1 * latitude^2, sd = 1)
RHS <- formula[[3]] # dpois(lambda = (b0 * latitude^2))
RHS <- formula[[3]] # dpois(lambda = (b0 * latitude^2))
RHS
response <- formula[[2]] #y
response
ddistn <- as.character(RHS[[1]])
ddistn
arglist <- as.list(RHS[-1]) ## $lambda = (b0 * latitude^2) ///delete function name
arglist
RHS
arglist1
arglist1 <- c(
list(x = response),
arglist, ##
list(log = TRUE)
)
arglist1
arglist1
pars = (c(b0=1, b1=2))
pars
as.list(pars)
## eventually we need to calculate partial derivatives of the log-likelihood
## with respect to all of its parameters
LL <- loglik_list[[ddistn]]$expr
LL
mnames <- loglik_list[[ddistn]]$params
mnames
all.vars(LL)
setdiff(all.vars(RHS), names(data))
parnames <- setdiff(all.vars(RHS), names(data))
parnames
names(data
)
data <- dd
parnames <- setdiff(all.vars(RHS), names(data))
parnames
setdiff(all.vars(LL),, "x")
setdiff(all.vars(LL), "x")
Deriv::Deriv(LL, mnames)
d0
d0 <- Deriv::Deriv(LL, mnames)
d0
arglist_ecal
arglist_eval
arglist_eval <- lapply(arglist, eval, pars_and_data)
pars_and_data <- c(as.list(pars), data)
arglist_eval <- lapply(arglist, eval, pars_and_data)
arglist_eval
## evaluate response variable and assign its value to 'x'
arglist_eval$x <- eval(response, pars_and_data) #x = y
## derivative of log-lik wrt PDF parameters
d1 <- eval(d0, arglist_eval) ## sub back to d0
d1
d0
d0[1]
d0[[1]]
names(d0)
d0
list(d0)
d0
d1
len(d1)
length(d1)
if arglist_eval
length(arglist_eval)
names(arglist_eval)
temp <- arglist_eval[['mean']]
temp
arglist_eval[[1]]
arglist_eval[1
]
temp <- arglist_eval[[2]]
temp
temp <- arglist_eval[2]
temp''
temp
eval(d0, temp)
d0
d0$.e1
d1
names(d1)
%in%
x = 'ab'
'a' %in% x
x = "ab"
"a" %in% x
setdiff(x,"a")
setdiff(names(d1), "sd")
grepl(names(d1), "sd")
grepl(names(d1), "sd", fixed = T)
grepl(names(d1)[103], "sd", fixed = T)
grepl("sd1", "sd", fixed = T)
grepl("sd", names(d1)[103], fixed = T)
mnames
arglist_eval
length(setdiff(names(arglist_eval)),"x")
names(arglist_eval)
setduff(names(arglist_eval), "x")
setdiff(names(arglist_eval), "x")
length(setdiff(names(arglist_eval), "x"))
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::build()
devtools::document()
devtools::check()
devtools::check()
devtools::test()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::test()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::test()
