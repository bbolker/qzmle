% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mle.R
\name{mle}
\alias{mle}
\title{Deriving MLE}
\usage{
mle(
  form,
  start,
  data,
  fixed = NULL,
  links = NULL,
  parameters = NULL,
  random = NULL,
  control = mle_control(),
  method = c("R", "TMB")
)
}
\arguments{
\item{form}{A formula in expression form of "y ~ model"}

\item{start}{A list of initial values for parameters}

\item{data}{A data frame containing any variables used in the formula for the log-likelihood. (\code{mle} does not work with variables taken from the global environment; if necessary, wrap these variables in \code{data.frame} to pass them to the function.)}

\item{fixed}{A list of parameter in the formula to keep fixed during optimization}

\item{links}{link function for parameters (identity link as default)}

\item{parameters}{A list of linear submodels and random effects}

\item{random}{???}

\item{control}{A list of parameter to pass to optimizer (See \code{mle_control})}

\item{method}{base R or TMB integration}
}
\description{
Deriving MLE
}
\examples{
d <- data.frame(x = 0:10, y = c(26, 17, 13, 12, 20, 5, 9, 8, 5, 4, 8))
fit0 <- mle(y ~ dpois(lambda = ymean), start = list(ymean = mean(d$y)), data = d)
ss <- list(ymean = mean(d$y), logsd = log(sd(d$y)))
fit3 <- mle(y ~ dnorm(mean = ymean, sd = exp(logsd)), start = ss, data = d)

set.seed(123)
x <- runif(20, 1, 10)
y <- rnorm(20, mean = 1.8 + 2.4 * x, sd = exp(0.3))
form <- y ~ dnorm(b0 + b1 * x, log_sigma)
fit <- mle(form,
  start = list(b0 = 1, b1 = 2, log_sigma = sd(y)),
  data = list(x = x, y = y), links = c(b0 = "identity", b1 = "identity", sigma = "log")
)
## linear submodels
set.seed(101)
rfp <- transform(emdbook::ReedfrogPred, nsize = as.numeric(size), random = rnorm(48))
form <- surv ~ dbinom(size = density, prob = exp(log_a) / (1 + exp(log_a) * h * density))
fit4 <- mle(form, start = list(h = 4, log_a = 2),
            parameters = list(log_a ~ poly(random)), data = rfp)
}
